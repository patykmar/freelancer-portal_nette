<?phpnamespace App\Grids\Admin;use Nette\Utils\Html;use NiftyGrid\DataSource\NDataSource;use NiftyGrid\DuplicateButtonException;use NiftyGrid\DuplicateColumnException;use NiftyGrid\Grid;/** * Description of IncidentGrid * * @author Martin Patyk */class IncidentGrid extends Grid{    private $model;    private $priorita;    private $stav;    private $firma;    public function __construct($db)    {        parent::__construct();        $this->model = $db->table('incident');        $this->priorita = $db->table('priorita');        $this->stav = $db->table('incident_stav');        $this->firma = $db->table('firma');    }    /**     * @throws DuplicateButtonException     * @throws DuplicateColumnException     */    protected function configure($presenter)    {        $source = new NDataSource(            $this->model                ->select('CONCAT(typ_incident.zkratka, incident.id) AS idTxt')                ->select('incident.id AS id')                ->select('ci.firma.nazev AS nazevFirmy')                ->select('incident_stav.nazev AS stav')                ->select('DATE_FORMAT(datum_ukonceni,GET_FORMAT(DATETIME,"EUR")) AS datum_ukonceni')                ->select('priorita.nazev AS priorita')                ->select('maly_popis')                ->select('faktura')                ->select('CONCAT(fronta_osoba.osoba.jmeno," ",fronta_osoba.osoba.prijmeni) AS osoba_prirazen'));        $this->addColumn('id', 'ID', '50px')            ->setTableName('incident.id')            ->setRenderer(function ($row) use ($presenter) {                return Html::el('a')->setText($row['idTxt'])->href($presenter->link("Tickets:edit", $row['id']));            })            ->setNumericFilter();        #$this->addColumn('nazevCi', 'Produkt');        $this->addColumn('maly_popis', 'Obsah', '360px', 60);        $this->addColumn('datum_ukonceni', 'Datum dokončení', '140px')            ->setDateFilter();        $this->addColumn('osoba_prirazen', 'Specialista', '110px');        $this->addColumn('priorita', 'Priorita')            ->setSelectFilter($this->priorita->fetchPairs('id', 'nazev'));        $this->addColumn('stav', 'Stav')            ->setTableName('incident_stav')            ->setSelectFilter($this->stav->fetchPairs('id', 'nazev'));        $this->addColumn('faktura', 'FA');        $this->addColumn('nazevFirmy', 'Firma', '200px')            ->setTableName('ci.firma')            ->setSelectFilter($this->firma->fetchPairs('id', 'nazev'));        $this->addButton("edit", "Upravit")            ->setClass("edit")            ->setLink(function ($row) use ($presenter) {                return $presenter->link("edit", $row['id']);            })            ->setAjax(FALSE);        $this->addButton("delete", "Smazat")            ->setClass("delete")            ->setLink(function ($row) use ($presenter) {                return $presenter->link("drop", $row['id']);            })            ->setConfirmationDialog(function ($row) {                return "Opravdu chcete smazat ?";            })            ->setAjax(FALSE);        $this->setDefaultOrder("id DESC");        //Předáme zdroj        $this->setDataSource($source);    }}